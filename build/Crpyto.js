/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/crypto.ts":
/*!***********************!*\
  !*** ./src/crypto.ts ***!
  \***********************/
/***/ (() => {

eval("\n// import cryptoData from \"../dist/data/crpytoData.json\"\nlet cryptoData = [\n    {\n        \"abbreviation\": \"doge\",\n        \"name\": \"Dogecoin\",\n        \"market\": [\n            {\n                \"name\": \"Robinhood\",\n                \"date\": \"2021-06-22\",\n                \"average_cost\": 0.3011,\n                \"quantity\": 372.00\n            },\n            {\n                \"name\": \"Binance\",\n                \"date\": \"2021-07-08\",\n                \"average_cost\": 0.2,\n                \"quantity\": 499\n            },\n        ]\n    },\n    {\n        \"abbreviation\": \"etc\",\n        \"name\": \"Ethereum Classic\",\n        \"market\": [\n            {\n                \"name\": \"Robhinhood\",\n                \"date\": \"2021-06-22\",\n                \"average_cost\": 54.60,\n                \"quantity\": 1.847649\n            },\n            {\n                \"name\": \"Binance\",\n                \"date\": \"2021-07-08\",\n                \"average_cost\": 48.0,\n                \"quantity\": 10.40\n            }\n        ]\n    },\n    {\n        \"abbreviation\": \"btc\",\n        \"name\": \"Bitcoin\",\n        \"market\": [\n            {\n                \"name\": \"Robhinhood\",\n                \"date\": \"2021-06-25\",\n                \"average_cost\": 32362.46,\n                \"quantity\": 0.0000309\n            },\n            {\n                \"name\": \"Binance\",\n                \"date\": \"2021-07-08\",\n                \"average_cost\": 32500,\n                \"quantity\": 0.015385\n            }\n        ]\n    },\n    {\n        \"abbreviation\": \"eth\",\n        \"name\": \"Ethereum\",\n        \"market\": [\n            {\n                \"name\": \"Robhinhood\",\n                \"date\": \"2021-06-22\",\n                \"average_cost\": 2399.95,\n                \"quantity\": 0.20835\n            },\n            {\n                \"name\": \"Binance\",\n                \"date\": \"2021-07-08\",\n                \"average_cost\": 2100,\n                \"quantity\": 0.47619\n            },\n            {\n                \"name\": \"Binance\",\n                \"date\": \"2021-07-12\",\n                \"average_cost\": 1900,\n                \"quantity\": 0.20578\n            }\n        ]\n    },\n    {\n        \"abbreviation\": \"ltc\",\n        \"name\": \"Litecoin\",\n        \"market\": [\n            {\n                \"name\": \"Robhinhood\",\n                \"date\": \"2021-06-22\",\n                \"average_cost\": 162.44,\n                \"quantity\": 2.46268969\n            }\n        ]\n    },\n    {\n        \"abbreviation\": \"vet\",\n        \"name\": \"VeChain\",\n        \"market\": [\n            {\n                \"name\": \"Binance\",\n                \"date\": \"2021-07-02\",\n                \"average_cost\": 0.0859,\n                \"quantity\": 3492\n            },\n            {\n                \"name\": \"Binance\",\n                \"date\": \"2021-07-08\",\n                \"average_cost\": 0.0768,\n                \"quantity\": 6628\n            }\n        ]\n    },\n    {\n        \"abbreviation\": \"vtho\",\n        \"name\": \"VeThor Token\",\n        \"market\": [\n            {\n                \"name\": \"Binance\",\n                \"date\": \"2021-07-02\",\n                \"average_cost\": 0.0067,\n                \"quantity\": 29850\n            }\n        ]\n    },\n    {\n        \"abbreviation\": \"ada\",\n        \"name\": \"Cardano\",\n        \"market\": [\n            {\n                \"name\": \"Binance\",\n                \"date\": \"2021-07-05\",\n                \"average_cost\": 1.40,\n                \"quantity\": 143\n            },\n            {\n                \"name\": \"Binance\",\n                \"date\": \"2021-07-09\",\n                \"average_cost\": 1.3000,\n                \"quantity\": 384.6\n            },\n            {\n                \"name\": \"Binance\",\n                \"date\": \"2021-07-12\",\n                \"average_cost\": 1.3000,\n                \"quantity\": 76.5\n            }\n        ]\n    }\n];\nlet allData;\nlet bodyWrapper = document.querySelector(\".bodyWrapper\");\nlet cryptoTable = document.createElement(\"div\");\ncryptoTable.classList.add(\"cryptoTable\");\nbodyWrapper.append(cryptoTable);\nlet headerRow = document.createElement(\"div\");\nheaderRow.classList.add(\"crpytoHeaderRow\");\nheaderRow.style.display = \"grid\";\nlet columns = [\"symbol\", \"averagePrice\", \"currentPrice\", \"percentageChange\", \"cost\", \"equity\", \"totalReturn\"];\nheaderRow.style.gridTemplateColumns = `repeat(${columns.length}, 1fr)`;\ncolumns.forEach(p => {\n    let item = document.createElement(\"div\");\n    item.innerHTML = p;\n    headerRow.append(item);\n});\ncryptoTable.append(headerRow);\nfunction createRow(_coin, allData) {\n    let symbol = _coin[\"abbreviation\"];\n    let item = allData.filter((p) => p.symbol == symbol)[0];\n    let totalQuantity;\n    if (_coin[\"market\"].length == 1) {\n        totalQuantity = _coin[\"market\"][0][\"quantity\"];\n    }\n    else {\n        totalQuantity = _coin[\"market\"].reduce((x, y) => x.quantity + y.quantity);\n    }\n    let equity;\n    if (_coin[\"market\"].length == 1) {\n        equity = _coin[\"market\"][0][\"quantity\"] * item[\"current_price\"];\n    }\n    else {\n        equity = _coin[\"market\"].reduce((x, y) => x[\"quantity\"] * item[\"current_price\"] + y[\"quantity\"] * item[\"current_price\"]);\n    }\n    let cost;\n    if (_coin[\"market\"].length == 1) {\n        cost = _coin[\"market\"][0][\"quantity\"] * _coin[\"market\"][0][\"average_cost\"];\n        console.log(177, cost);\n    }\n    else {\n        cost = _coin[\"market\"].reduce((x, y) => x[\"quantity\"] * x[\"average_cost\"] + y[\"quantity\"] * y[\"average_cost\"]);\n        console.log(cost);\n    }\n    let totalReturn = equity - cost;\n    let row = document.createElement(\"div\");\n    row.classList.add(\"crpytoRow\");\n    row.style.display = \"grid\";\n    row.style.gridTemplateColumns = `repeat(${columns.length}, 1fr)`;\n    let symbolColumn = document.createElement(\"div\");\n    symbolColumn.innerHTML = symbol;\n    let averagePriceColumn = document.createElement(\"div\");\n    averagePriceColumn.innerHTML = `${cost / totalQuantity}`;\n    let currentPriceColumn = document.createElement(\"div\");\n    currentPriceColumn.innerHTML = item[\"current_price\"];\n    let percentageChangeColumn = document.createElement(\"div\");\n    percentageChangeColumn.innerHTML = `${(item[\"current_price\"] * totalQuantity - cost) / cost * 100}`;\n    let costColumn = document.createElement(\"div\");\n    costColumn.innerHTML = `${cost}`;\n    let equityColumn = document.createElement(\"div\");\n    equityColumn.innerHTML = `${equity}`;\n    let totalReturnColumn = document.createElement(\"div\");\n    totalReturnColumn.innerHTML = `${totalReturn}`;\n    row.append(symbolColumn, averagePriceColumn, currentPriceColumn, percentageChangeColumn, costColumn, equityColumn, totalReturnColumn);\n    cryptoTable.append(row);\n}\nlet getDataButton = document.createElement(\"button\");\ngetDataButton.innerHTML = \"getData\";\nfunction fetchDataFromGecko() {\n    fetch(\"/allCrpytoData\")\n        .then(response => response.json())\n        .then(data => {\n        let allData = data.data;\n        Array.from(cryptoTable.children).forEach((row, i) => { if (i != 0)\n            row.remove(); });\n        cryptoData.forEach(_coin => createRow(_coin, allData));\n    });\n}\nfetchDataFromGecko();\nsetInterval(fetchDataFromGecko, 5000);\nbodyWrapper.append(getDataButton);\n\n\n//# sourceURL=webpack://reactInAction/./src/crypto.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/crypto.ts"]();
/******/ 	
/******/ })()
;